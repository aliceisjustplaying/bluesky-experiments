import bsky from '@atproto/api';
const { BskyAgent, RichText } = bsky;
import * as dotenv from 'dotenv';
import process from 'node:process';
dotenv.config();

const agent = new BskyAgent({
  service: 'https://bsky.social',
  persistSession: (evt, sess) => {
    // store the session-data for reuse
  },
});

await agent.login({
  identifier: process.env.BSKY_USERNAME!,
  password: process.env.BSKY_PASSWORD!,
});

const one = false;

if (one) {
  const bloot =
    'You can find the code for this bleet >>>here<<<, now with a link card that has a nice title and description!';
  await agent.post({
    text: bloot,
    entities: [
      {
        index: { start: bloot.indexOf('>>>') + 3, end: bloot.indexOf('<<<') },
        type: 'link',
        value: 'https://github.com/aliceisjustplaying/bluesky-experiments',
      },
    ],
    embed: {
      $type: 'app.bsky.embed.external',
      external: {
        uri: 'https://github.com/aliceisjustplaying/bluesky-experiments',
        title: "alice's bluesky experiments",
        description: "now i'm just playing around with the api",
      },
    },
  });
}

const two = true;

if (two) {
  const flirt = `could have saved myself some trouble by
  
*checks notes*

reading the README but hey I managed to discover features the app client/web doesn't have yet.

autogenerated link, but no card yet: https://github.com/aliceisjustplaying/bluesky-experiments`;
  const rt = new RichText({ text: flirt });
  rt;
  await rt.detectFacets(agent); // automatically detects mentions and links
  await agent.post({
    $type: 'app.bsky.feed.post',
    text: rt.text,
    facets: rt.facets,
    createdAt: new Date().toISOString(),
    reply: {
      root: {
        uri: 'at://did:plc:by3jhwdqgbtrcc7q4tkkv3cf/app.bsky.feed.post/3jszamd374c2h',
        cid: 'bafyreidt72dmp3dsq5qs5mocrauyj3ctwzyywxnjcd45rde2quae3zanjq',
      },
      parent: {
        uri: 'at://did:plc:by3jhwdqgbtrcc7q4tkkv3cf/app.bsky.feed.post/3jszamd374c2h',
        cid: 'bafyreidt72dmp3dsq5qs5mocrauyj3ctwzyywxnjcd45rde2quae3zanjq',
      },
    },
  });
}
